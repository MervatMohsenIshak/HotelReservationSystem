// <auto-generated />
using System;
using HotelReservationSystem.Persistence.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelReservationSystem.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.BoardingType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BoardingType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Full Board"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Half Board"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Breakfast only"
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a38322c7-79eb-409c-8f8c-08dcc87d6780"),
                            CreatedOn = new DateTime(2024, 8, 30, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8400),
                            Email = "Ali@gmail.com",
                            MobileNumber = "0123546987",
                            Name = "Ali",
                            UpdatedOn = new DateTime(2024, 8, 30, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8401)
                        },
                        new
                        {
                            Id = new Guid("a38322c7-79eb-409c-8d8d-08dcc87d6780"),
                            CreatedOn = new DateTime(2024, 8, 30, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8404),
                            Email = "Sara@gmail.com",
                            MobileNumber = "01235441987",
                            Name = "Sara",
                            UpdatedOn = new DateTime(2024, 8, 30, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8404)
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.ReservationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReservationStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "UpComing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Active"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Past"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Canceled"
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.Reservations", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BoardingTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationStatusId")
                        .HasColumnType("int");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BoardingTypeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ReservationStatusId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BoardingTypeId = 1,
                            CreatedOn = new DateTime(2024, 8, 30, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8441),
                            CustomerId = new Guid("a38322c7-79eb-409c-8f8c-08dcc87d6780"),
                            EndDate = new DateTime(2024, 9, 14, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8426),
                            ReferenceNumber = "RS1050924",
                            ReservationStatusId = 1,
                            RoomId = 1L,
                            StartDate = new DateTime(2024, 8, 30, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8425),
                            UpdatedOn = new DateTime(2024, 8, 30, 22, 39, 34, 411, DateTimeKind.Utc).AddTicks(8442)
                        },
                        new
                        {
                            Id = 2L,
                            BoardingTypeId = 2,
                            CreatedOn = new DateTime(2024, 8, 29, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("a38322c7-79eb-409c-8d8d-08dcc87d6780"),
                            EndDate = new DateTime(2024, 9, 5, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            ReferenceNumber = "RS2300824",
                            ReservationStatusId = 2,
                            RoomId = 2L,
                            StartDate = new DateTime(2024, 8, 30, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            UpdatedOn = new DateTime(2024, 8, 29, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AdultNo")
                        .HasColumnType("int");

                    b.Property<int>("ChildNo")
                        .HasColumnType("int");

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AdultNo = 2,
                            ChildNo = 1,
                            FloorNumber = 1,
                            RoomNumber = 1001,
                            RoomTypeId = 1
                        },
                        new
                        {
                            Id = 2L,
                            AdultNo = 1,
                            ChildNo = 0,
                            FloorNumber = 2,
                            RoomNumber = 2002,
                            RoomTypeId = 2
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.RoomSpacifications", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomSpacifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pool view"
                        },
                        new
                        {
                            Id = 2,
                            Name = "See View"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Air conditioning"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TV"
                        },
                        new
                        {
                            Id = 5,
                            Name = "WiFi"
                        },
                        new
                        {
                            Id = 6,
                            Name = "electric Kettle"
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.RoomType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoomType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Deluxe"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Single"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Double"
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.RoomTypeSpacifications", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoomSpacificationsId")
                        .HasColumnType("int");

                    b.HasKey("RoomTypeId", "RoomSpacificationsId");

                    b.HasIndex("RoomSpacificationsId");

                    b.ToTable("RoomTypeSpacifications");

                    b.HasData(
                        new
                        {
                            RoomTypeId = 1,
                            RoomSpacificationsId = 1
                        },
                        new
                        {
                            RoomTypeId = 1,
                            RoomSpacificationsId = 5
                        },
                        new
                        {
                            RoomTypeId = 1,
                            RoomSpacificationsId = 3
                        },
                        new
                        {
                            RoomTypeId = 1,
                            RoomSpacificationsId = 4
                        },
                        new
                        {
                            RoomTypeId = 1,
                            RoomSpacificationsId = 6
                        },
                        new
                        {
                            RoomTypeId = 2,
                            RoomSpacificationsId = 2
                        },
                        new
                        {
                            RoomTypeId = 2,
                            RoomSpacificationsId = 5
                        },
                        new
                        {
                            RoomTypeId = 2,
                            RoomSpacificationsId = 4
                        },
                        new
                        {
                            RoomTypeId = 3,
                            RoomSpacificationsId = 6
                        },
                        new
                        {
                            RoomTypeId = 3,
                            RoomSpacificationsId = 3
                        },
                        new
                        {
                            RoomTypeId = 3,
                            RoomSpacificationsId = 1
                        });
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.Reservations", b =>
                {
                    b.HasOne("HotelReservationSystem.Domain.Entities.BoardingType", "BoardingType")
                        .WithMany()
                        .HasForeignKey("BoardingTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationSystem.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationSystem.Domain.Entities.ReservationStatus", "ReservationStatus")
                        .WithMany()
                        .HasForeignKey("ReservationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationSystem.Domain.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoardingType");

                    b.Navigation("Customer");

                    b.Navigation("ReservationStatus");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.Room", b =>
                {
                    b.HasOne("HotelReservationSystem.Domain.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomType");
                });

            modelBuilder.Entity("HotelReservationSystem.Domain.Entities.RoomTypeSpacifications", b =>
                {
                    b.HasOne("HotelReservationSystem.Domain.Entities.RoomSpacifications", "RoomSpacifications")
                        .WithMany()
                        .HasForeignKey("RoomSpacificationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationSystem.Domain.Entities.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomSpacifications");

                    b.Navigation("RoomType");
                });
#pragma warning restore 612, 618
        }
    }
}
